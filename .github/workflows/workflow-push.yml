#Nom du workflow
name: push workflow
#Trigger
on: 
  push: 
      branches:
        - main
        - dev
#Les actions à faire
jobs: 
    build: 
        name: Build et run
        runs-on: ubuntu-latest
        steps: 
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up JDS 17
              uses: actions/setup-java@v4
              with: 
                distribution: 'temurin'
                java-version: '17'
            - name: Cache Maven 
              uses: actions/cache@v4
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                  ${{ runner.os }}-maven-
            - name: Install maven dependencies
              run: mvn install
            - name: Run tests
              run: mvn test
              continue-on-error: false # Le job échouera si les tests échouent
            - name: Build maven
              run: mvn package
            - name: Upload du build
              if: ${{ success() && github.ref == 'refs/heads/main' }}
              uses: actions/upload-artifact@v4
              with:
                name: Build-artifact
                path: target/*.jar
    download:
      runs-on: ubuntu-latest
      needs: build
      if: ${{ github.ref == 'refs/heads/main' }}
      steps:
        - name: Récupérer l'artéfact
          uses: actions/download-artifact@v4
          with:
            name: Build-artifact
        - name: lister les fichiers
          run: ls
    docker:
      runs-on: ubuntu-latest
      needs: download
      if: ${{ github.ref == 'refs/heads/main' }}
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Login docker hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build docker image
          run: docker build -t $USERNAME/app .

        - name: Push docker image
          run: docker push $USERNAME/app